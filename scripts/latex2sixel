#!/bin/bash


function usage()
{
cat <<ENDUSAGE

This is latex2sixel V 1.0.2 (Mon Apr 11 15:59:19 CEST 2022)

Usage: $0 [OPTION]... TEXSTRING
Options are chosen to be similar to dvips' options where possible:

  -D #         Output resolution (default: $D dpi)
  -I #         Image left indent (default: $I terminal columns)

  -bg s        Background color (TeX-style color or 'Transparent')
  -fg s        Foreground color (TeX-style color or 'list' )

  # = number   s = string

  TEXSTRING is a LaTeX expression betweeen apostrophes (not quotes).
  Examples: '\$\alpha\$' | '\LaTeX' | 'This is math: \$x+y\$'.

Required applications: latex, dvipng, img2sixel.
Terminals supporting sixel graphics: xterm -ti vt340, mintty, mlterm.
More info @  https://github.com/saitoha/libsixel
ENDUSAGE
}

if ! tty -s; then
    set -- "$@" "$(</dev/stdin)"
fi

[[ $# == 0 ]]        && { usage;exit; };

#
# config (default)
#
pt=11pt
fg=Green
bg=Black
D=150  #120
T=bbox  #bbox,tight ...
O=0.25cm,0.25cm			# No longer used due to preview package.
I=5
tmpdir=$(mktemp --tmpdir -d l2s.XXXXXX)
key=$tmpdir/l2s
img=$key-$(tr -dc '[A-Za-z]' <<<"$1" | cut -c-70).png

trap cleanup EXIT
function cleanup() {
    # CAUTION -- removing files
    # You may comment the line below if unsure ;)
    rm -r "$tmpdir"
}

trap die ERR
function die() {
    echo -n "latex2sixel: Dying at line "
    caller
    for arg; do echo "latex2sixel: $arg"; done
    kill 0			# Exit even though we're in a subshell
}

#
# option parsing
#
TEMP=$(getopt -a -n 'latex2sixel' -o 'D:O:I:T:ht' \
	      --long 'resolution:,indent:,offset:,size:' \
	      --long 'fg:,forecolor:,bg:,backcolor,preamble:' \
	      --long 'help' \
	      -- "$@")  ||  die "Use -h for help"
eval set -- "$TEMP"		# Set Bash argv in "$@"
unset TEMP

while true; do
    case "$1" in
	-h|--help) usage; exit
	    ;;
	-D|--resolution)
	    D="$2"
	    shift # past argument
	    ;;
	-O|--offset)
	    O="$2"
	    shift # past argument
	    ;;
	-I|--indent)
	    [[ "$2" =~ [^0-9] ]] && die "-I takes an integer, not '$2'"
	    I="$2"
	    shift # past argument
	    ;;
	-T|--size)
	    T="$2"
	    shift # past argument
	    ;;
	-t)
	    I=0
	    T="tight"
	    ;;
	--fg|--forecolor)
	    fg="$2"
	    shift # past argument
	    ;;
	--bg|--backcolor)
	    bg="$2"
	    shift # past argument
	    ;;
	--) shift; break
	    ;;
	--preamble)
	    preamble+=($2)
	    shift # past argument
	    ;;
	*)
            echo 'Internal Error' >&2
	    exit 1
	    ;;
    esac
    shift
done


# Check for \usepackage in "$@" and put it in the $preamble[] section.
# All other args go into $postamble[].
for arg; do
    IFS=$'\n'			# Don't split strings on spaces
    if preamble+=(  $(grep -o '^ *\\usepackage.*$' <<< $arg ) ); then
	postamble+=( "%% $arg" )
    else
	postamble+=( "$arg" )
    fi
    unset IFS
done

# TeX template 

TEX=$(cat <<EOF
\documentclass[$pt]{article}
${preamble[@]}
\usepackage{amsmath,amssymb}
\usepackage{breqn}
\usepackage[active]{preview}
\usepackage[svgnames,x11names,dvipsnames,showerrors]{xcolor}
\pagestyle{empty}
\begin{document}
  \color{$fg}
  \begin{preview}
    ${postamble[@]}
  \end{preview}
\end{document}
EOF
)


LATEX="latex -jobname=$key -halt-on-error -output-directory $tmpdir"
DVIPNG="dvipng --truecolor -T $T -D $D -O $O -fg $fg -bg $bg -q -o $img"

$LATEX <<<"$TEX" > /dev/null ||
    die "$(sed -n '/^Here is how much of TeX/,$d;/^!/,$ p' $key.log)"
$DVIPNG $key.dvi  > /dev/null ||
    die "$(< $key.log)"
printf "%${I}s"			# Sixels are indented by text cursor position
img2sixel $img
echo				# Sixels should always end with a newline

# Temp files are automatically removed by cleanup() at exit.
